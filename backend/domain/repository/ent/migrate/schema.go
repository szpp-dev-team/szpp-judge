// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// LanguagesColumns holds the columns for the "languages" table.
	LanguagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "submit_language", Type: field.TypeInt, Nullable: true},
	}
	// LanguagesTable holds the schema information for the "languages" table.
	LanguagesTable = &schema.Table{
		Name:       "languages",
		Columns:    LanguagesColumns,
		PrimaryKey: []*schema.Column{LanguagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "languages_submits_language",
				Columns:    []*schema.Column{LanguagesColumns[1]},
				RefColumns: []*schema.Column{SubmitsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SubmitsColumns holds the columns for the "submits" table.
	SubmitsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// SubmitsTable holds the schema information for the "submits" table.
	SubmitsTable = &schema.Table{
		Name:       "submits",
		Columns:    SubmitsColumns,
		PrimaryKey: []*schema.Column{SubmitsColumns[0]},
	}
	// TestcaseResultsColumns holds the columns for the "testcase_results" table.
	TestcaseResultsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "submit_testcase_result", Type: field.TypeInt, Nullable: true},
	}
	// TestcaseResultsTable holds the schema information for the "testcase_results" table.
	TestcaseResultsTable = &schema.Table{
		Name:       "testcase_results",
		Columns:    TestcaseResultsColumns,
		PrimaryKey: []*schema.Column{TestcaseResultsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "testcase_results_submits_testcase_result",
				Columns:    []*schema.Column{TestcaseResultsColumns[1]},
				RefColumns: []*schema.Column{SubmitsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "role", Type: field.TypeString},
		{Name: "encrypted_password", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "submit_user", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_submits_user",
				Columns:    []*schema.Column{UsersColumns[6]},
				RefColumns: []*schema.Column{SubmitsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		LanguagesTable,
		SubmitsTable,
		TestcaseResultsTable,
		UsersTable,
	}
)

func init() {
	LanguagesTable.ForeignKeys[0].RefTable = SubmitsTable
	TestcaseResultsTable.ForeignKeys[0].RefTable = SubmitsTable
	UsersTable.ForeignKeys[0].RefTable = SubmitsTable
}
