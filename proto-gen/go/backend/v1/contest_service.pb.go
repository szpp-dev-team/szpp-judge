// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: backend/v1/contest_service.proto

package backendv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateContestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contest *MutationContest `protobuf:"bytes,1,opt,name=contest,proto3" json:"contest,omitempty"`
}

func (x *CreateContestRequest) Reset() {
	*x = CreateContestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContestRequest) ProtoMessage() {}

func (x *CreateContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContestRequest.ProtoReflect.Descriptor instead.
func (*CreateContestRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateContestRequest) GetContest() *MutationContest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type CreateContestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contest *Contest `protobuf:"bytes,1,opt,name=contest,proto3" json:"contest,omitempty"`
}

func (x *CreateContestResponse) Reset() {
	*x = CreateContestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContestResponse) ProtoMessage() {}

func (x *CreateContestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContestResponse.ProtoReflect.Descriptor instead.
func (*CreateContestResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateContestResponse) GetContest() *Contest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type GetContestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *GetContestRequest) Reset() {
	*x = GetContestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestRequest) ProtoMessage() {}

func (x *GetContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestRequest.ProtoReflect.Descriptor instead.
func (*GetContestRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetContestRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type GetContestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contest *Contest `protobuf:"bytes,1,opt,name=contest,proto3" json:"contest,omitempty"`
}

func (x *GetContestResponse) Reset() {
	*x = GetContestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestResponse) ProtoMessage() {}

func (x *GetContestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestResponse.ProtoReflect.Descriptor instead.
func (*GetContestResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetContestResponse) GetContest() *Contest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type UpdateContestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Contest *MutationContest `protobuf:"bytes,2,opt,name=contest,proto3" json:"contest,omitempty"`
}

func (x *UpdateContestRequest) Reset() {
	*x = UpdateContestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestRequest) ProtoMessage() {}

func (x *UpdateContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestRequest.ProtoReflect.Descriptor instead.
func (*UpdateContestRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateContestRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateContestRequest) GetContest() *MutationContest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type UpdateContestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contest *Contest `protobuf:"bytes,1,opt,name=contest,proto3" json:"contest,omitempty"`
}

func (x *UpdateContestResponse) Reset() {
	*x = UpdateContestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestResponse) ProtoMessage() {}

func (x *UpdateContestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestResponse.ProtoReflect.Descriptor instead.
func (*UpdateContestResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateContestResponse) GetContest() *Contest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type ListContestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListContestsRequest) Reset() {
	*x = ListContestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsRequest) ProtoMessage() {}

func (x *ListContestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsRequest.ProtoReflect.Descriptor instead.
func (*ListContestsRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{6}
}

type ListContestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contests []*Contest `protobuf:"bytes,1,rep,name=contests,proto3" json:"contests,omitempty"`
}

func (x *ListContestsResponse) Reset() {
	*x = ListContestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsResponse) ProtoMessage() {}

func (x *ListContestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsResponse.ProtoReflect.Descriptor instead.
func (*ListContestsResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListContestsResponse) GetContests() []*Contest {
	if x != nil {
		return x.Contests
	}
	return nil
}

type ListContestTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestSlug string `protobuf:"bytes,1,opt,name=contest_slug,json=contestSlug,proto3" json:"contest_slug,omitempty"`
}

func (x *ListContestTasksRequest) Reset() {
	*x = ListContestTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContestTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestTasksRequest) ProtoMessage() {}

func (x *ListContestTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestTasksRequest.ProtoReflect.Descriptor instead.
func (*ListContestTasksRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListContestTasksRequest) GetContestSlug() string {
	if x != nil {
		return x.ContestSlug
	}
	return ""
}

type ListContestTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*ContestTask `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"` // 問題の並び順
}

func (x *ListContestTasksResponse) Reset() {
	*x = ListContestTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContestTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestTasksResponse) ProtoMessage() {}

func (x *ListContestTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestTasksResponse.ProtoReflect.Descriptor instead.
func (*ListContestTasksResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListContestTasksResponse) GetTasks() []*ContestTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type GetContestTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestSlug string `protobuf:"bytes,1,opt,name=contest_slug,json=contestSlug,proto3" json:"contest_slug,omitempty"`
	TaskId      int32  `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetContestTaskRequest) Reset() {
	*x = GetContestTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContestTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestTaskRequest) ProtoMessage() {}

func (x *GetContestTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestTaskRequest.ProtoReflect.Descriptor instead.
func (*GetContestTaskRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetContestTaskRequest) GetContestSlug() string {
	if x != nil {
		return x.ContestSlug
	}
	return ""
}

func (x *GetContestTaskRequest) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type GetContestTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task    *Task       `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Samples []*Testcase `protobuf:"bytes,2,rep,name=samples,proto3" json:"samples,omitempty"`
}

func (x *GetContestTaskResponse) Reset() {
	*x = GetContestTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContestTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestTaskResponse) ProtoMessage() {}

func (x *GetContestTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestTaskResponse.ProtoReflect.Descriptor instead.
func (*GetContestTaskResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetContestTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *GetContestTaskResponse) GetSamples() []*Testcase {
	if x != nil {
		return x.Samples
	}
	return nil
}

type SyncContestTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestSlug string                          `protobuf:"bytes,1,opt,name=contest_slug,json=contestSlug,proto3" json:"contest_slug,omitempty"`
	Tasks       []*SyncContestTasksRequest_Task `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"` // コンテスト内での出題順は配列の要素の順番になる
}

func (x *SyncContestTasksRequest) Reset() {
	*x = SyncContestTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncContestTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncContestTasksRequest) ProtoMessage() {}

func (x *SyncContestTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncContestTasksRequest.ProtoReflect.Descriptor instead.
func (*SyncContestTasksRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{12}
}

func (x *SyncContestTasksRequest) GetContestSlug() string {
	if x != nil {
		return x.ContestSlug
	}
	return ""
}

func (x *SyncContestTasksRequest) GetTasks() []*SyncContestTasksRequest_Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type SyncContestTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"` // コンテストに紐づく問題一覧
}

func (x *SyncContestTasksResponse) Reset() {
	*x = SyncContestTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncContestTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncContestTasksResponse) ProtoMessage() {}

func (x *SyncContestTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncContestTasksResponse.ProtoReflect.Descriptor instead.
func (*SyncContestTasksResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{13}
}

func (x *SyncContestTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type GetMySubmissionStatusesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestSlug string `protobuf:"bytes,1,opt,name=contest_slug,json=contestSlug,proto3" json:"contest_slug,omitempty"`
}

func (x *GetMySubmissionStatusesRequest) Reset() {
	*x = GetMySubmissionStatusesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMySubmissionStatusesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMySubmissionStatusesRequest) ProtoMessage() {}

func (x *GetMySubmissionStatusesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMySubmissionStatusesRequest.ProtoReflect.Descriptor instead.
func (*GetMySubmissionStatusesRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetMySubmissionStatusesRequest) GetContestSlug() string {
	if x != nil {
		return x.ContestSlug
	}
	return ""
}

type GetMySubmissionStatusesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionStatuses []*SubmissionStatus `protobuf:"bytes,1,rep,name=submission_statuses,json=submissionStatuses,proto3" json:"submission_statuses,omitempty"`
}

func (x *GetMySubmissionStatusesResponse) Reset() {
	*x = GetMySubmissionStatusesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMySubmissionStatusesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMySubmissionStatusesResponse) ProtoMessage() {}

func (x *GetMySubmissionStatusesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMySubmissionStatusesResponse.ProtoReflect.Descriptor instead.
func (*GetMySubmissionStatusesResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetMySubmissionStatusesResponse) GetSubmissionStatuses() []*SubmissionStatus {
	if x != nil {
		return x.SubmissionStatuses
	}
	return nil
}

type GetStandingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestSlug string `protobuf:"bytes,1,opt,name=contest_slug,json=contestSlug,proto3" json:"contest_slug,omitempty"`
}

func (x *GetStandingsRequest) Reset() {
	*x = GetStandingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStandingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStandingsRequest) ProtoMessage() {}

func (x *GetStandingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStandingsRequest.ProtoReflect.Descriptor instead.
func (*GetStandingsRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetStandingsRequest) GetContestSlug() string {
	if x != nil {
		return x.ContestSlug
	}
	return ""
}

type GetStandingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StandingsList []*StandingsRecord `protobuf:"bytes,1,rep,name=standings_list,json=standingsList,proto3" json:"standings_list,omitempty"`
}

func (x *GetStandingsResponse) Reset() {
	*x = GetStandingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStandingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStandingsResponse) ProtoMessage() {}

func (x *GetStandingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStandingsResponse.ProtoReflect.Descriptor instead.
func (*GetStandingsResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetStandingsResponse) GetStandingsList() []*StandingsRecord {
	if x != nil {
		return x.StandingsList
	}
	return nil
}

// コンテストに参加登録するときのリクエスト
type RegisterMeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestSlug string `protobuf:"bytes,1,opt,name=contest_slug,json=contestSlug,proto3" json:"contest_slug,omitempty"`
}

func (x *RegisterMeRequest) Reset() {
	*x = RegisterMeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMeRequest) ProtoMessage() {}

func (x *RegisterMeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMeRequest.ProtoReflect.Descriptor instead.
func (*RegisterMeRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{18}
}

func (x *RegisterMeRequest) GetContestSlug() string {
	if x != nil {
		return x.ContestSlug
	}
	return ""
}

type RegisterMeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterMeResponse) Reset() {
	*x = RegisterMeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMeResponse) ProtoMessage() {}

func (x *RegisterMeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMeResponse.ProtoReflect.Descriptor instead.
func (*RegisterMeResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{19}
}

type CreateClarificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content     string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	ContestSlug string `protobuf:"bytes,2,opt,name=contest_slug,json=contestSlug,proto3" json:"contest_slug,omitempty"`
	TaskId      *int32 `protobuf:"varint,3,opt,name=task_id,json=taskId,proto3,oneof" json:"task_id,omitempty"`
}

func (x *CreateClarificationRequest) Reset() {
	*x = CreateClarificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClarificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClarificationRequest) ProtoMessage() {}

func (x *CreateClarificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClarificationRequest.ProtoReflect.Descriptor instead.
func (*CreateClarificationRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{20}
}

func (x *CreateClarificationRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateClarificationRequest) GetContestSlug() string {
	if x != nil {
		return x.ContestSlug
	}
	return ""
}

func (x *CreateClarificationRequest) GetTaskId() int32 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

type CreateClarificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clarification *Clarification `protobuf:"bytes,1,opt,name=clarification,proto3" json:"clarification,omitempty"`
}

func (x *CreateClarificationResponse) Reset() {
	*x = CreateClarificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClarificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClarificationResponse) ProtoMessage() {}

func (x *CreateClarificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClarificationResponse.ProtoReflect.Descriptor instead.
func (*CreateClarificationResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{21}
}

func (x *CreateClarificationResponse) GetClarification() *Clarification {
	if x != nil {
		return x.Clarification
	}
	return nil
}

type ListClarificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestSlug string `protobuf:"bytes,1,opt,name=contest_slug,json=contestSlug,proto3" json:"contest_slug,omitempty"`
}

func (x *ListClarificationsRequest) Reset() {
	*x = ListClarificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClarificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClarificationsRequest) ProtoMessage() {}

func (x *ListClarificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClarificationsRequest.ProtoReflect.Descriptor instead.
func (*ListClarificationsRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListClarificationsRequest) GetContestSlug() string {
	if x != nil {
		return x.ContestSlug
	}
	return ""
}

type ListClarificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clarifications []*Clarification `protobuf:"bytes,1,rep,name=clarifications,proto3" json:"clarifications,omitempty"`
}

func (x *ListClarificationsResponse) Reset() {
	*x = ListClarificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClarificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClarificationsResponse) ProtoMessage() {}

func (x *ListClarificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClarificationsResponse.ProtoReflect.Descriptor instead.
func (*ListClarificationsResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListClarificationsResponse) GetClarifications() []*Clarification {
	if x != nil {
		return x.Clarifications
	}
	return nil
}

type DeleteClarificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteClarificationRequest) Reset() {
	*x = DeleteClarificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClarificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClarificationRequest) ProtoMessage() {}

func (x *DeleteClarificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClarificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteClarificationRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteClarificationRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteClarificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteClarificationResponse) Reset() {
	*x = DeleteClarificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClarificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClarificationResponse) ProtoMessage() {}

func (x *DeleteClarificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClarificationResponse.ProtoReflect.Descriptor instead.
func (*DeleteClarificationResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{25}
}

type CreateAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClarificationId int32  `protobuf:"varint,1,opt,name=clarification_id,json=clarificationId,proto3" json:"clarification_id,omitempty"`
	Content         string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	IsPublic        bool   `protobuf:"varint,3,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
}

func (x *CreateAnswerRequest) Reset() {
	*x = CreateAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnswerRequest) ProtoMessage() {}

func (x *CreateAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnswerRequest.ProtoReflect.Descriptor instead.
func (*CreateAnswerRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{26}
}

func (x *CreateAnswerRequest) GetClarificationId() int32 {
	if x != nil {
		return x.ClarificationId
	}
	return 0
}

func (x *CreateAnswerRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateAnswerRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type CreateAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer *Clarification_Answer `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *CreateAnswerResponse) Reset() {
	*x = CreateAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnswerResponse) ProtoMessage() {}

func (x *CreateAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnswerResponse.ProtoReflect.Descriptor instead.
func (*CreateAnswerResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{27}
}

func (x *CreateAnswerResponse) GetAnswer() *Clarification_Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

type UpdateAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerId int32  `protobuf:"varint,1,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
	Content  string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	IsPublic bool   `protobuf:"varint,3,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
}

func (x *UpdateAnswerRequest) Reset() {
	*x = UpdateAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnswerRequest) ProtoMessage() {}

func (x *UpdateAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnswerRequest.ProtoReflect.Descriptor instead.
func (*UpdateAnswerRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateAnswerRequest) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

func (x *UpdateAnswerRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateAnswerRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type UpdateAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer *Clarification_Answer `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *UpdateAnswerResponse) Reset() {
	*x = UpdateAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnswerResponse) ProtoMessage() {}

func (x *UpdateAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnswerResponse.ProtoReflect.Descriptor instead.
func (*UpdateAnswerResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateAnswerResponse) GetAnswer() *Clarification_Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

type DeleteAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerId int32 `protobuf:"varint,1,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *DeleteAnswerRequest) Reset() {
	*x = DeleteAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnswerRequest) ProtoMessage() {}

func (x *DeleteAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnswerRequest.ProtoReflect.Descriptor instead.
func (*DeleteAnswerRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteAnswerRequest) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

type DeleteAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAnswerResponse) Reset() {
	*x = DeleteAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnswerResponse) ProtoMessage() {}

func (x *DeleteAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnswerResponse.ProtoReflect.Descriptor instead.
func (*DeleteAnswerResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{31}
}

type SyncContestTasksRequest_Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Score int32 `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *SyncContestTasksRequest_Task) Reset() {
	*x = SyncContestTasksRequest_Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_contest_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncContestTasksRequest_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncContestTasksRequest_Task) ProtoMessage() {}

func (x *SyncContestTasksRequest_Task) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_contest_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncContestTasksRequest_Task.ProtoReflect.Descriptor instead.
func (*SyncContestTasksRequest_Task) Descriptor() ([]byte, []int) {
	return file_backend_v1_contest_service_proto_rawDescGZIP(), []int{12, 0}
}

func (x *SyncContestTasksRequest_Task) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SyncContestTasksRequest_Task) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

var File_backend_v1_contest_service_proto protoreflect.FileDescriptor

var file_backend_v1_contest_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x22,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x22, 0x46, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x22, 0x27, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x22, 0x43, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x22,
	0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x22,
	0x3c, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x6c, 0x75, 0x67, 0x22, 0x49, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6c, 0x75,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x53, 0x6c, 0x75, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x6e, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x2e, 0x0a,
	0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x22, 0xaa, 0x01,
	0x0a, 0x17, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x3e, 0x0a, 0x05,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x2c, 0x0a, 0x04,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x42, 0x0a, 0x18, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x43,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53,
	0x6c, 0x75, 0x67, 0x22, 0x70, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x12, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x6c, 0x75, 0x67, 0x22,
	0x5a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x11, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53,
	0x6c, 0x75, 0x67, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x1c, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22,
	0x5e, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0d, 0x63, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x3e, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x6c, 0x75, 0x67, 0x22,
	0x5f, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x0e, 0x63, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x63, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1d,
	0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x63, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x50, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x22, 0x50, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x06, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xb5, 0x0b, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1f, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5d, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x12, 0x23, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x21, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x23, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x12, 0x2a, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x12, 0x1d, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x51, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb5, 0x01, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x7a, 0x70, 0x70, 0x2d, 0x64, 0x65, 0x76, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x73, 0x7a,
	0x70, 0x70, 0x2d, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31,
	0x3b, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x42, 0x58, 0x58,
	0xaa, 0x02, 0x0a, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a,
	0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_backend_v1_contest_service_proto_rawDescOnce sync.Once
	file_backend_v1_contest_service_proto_rawDescData = file_backend_v1_contest_service_proto_rawDesc
)

func file_backend_v1_contest_service_proto_rawDescGZIP() []byte {
	file_backend_v1_contest_service_proto_rawDescOnce.Do(func() {
		file_backend_v1_contest_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_v1_contest_service_proto_rawDescData)
	})
	return file_backend_v1_contest_service_proto_rawDescData
}

var file_backend_v1_contest_service_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_backend_v1_contest_service_proto_goTypes = []interface{}{
	(*CreateContestRequest)(nil),            // 0: backend.v1.CreateContestRequest
	(*CreateContestResponse)(nil),           // 1: backend.v1.CreateContestResponse
	(*GetContestRequest)(nil),               // 2: backend.v1.GetContestRequest
	(*GetContestResponse)(nil),              // 3: backend.v1.GetContestResponse
	(*UpdateContestRequest)(nil),            // 4: backend.v1.UpdateContestRequest
	(*UpdateContestResponse)(nil),           // 5: backend.v1.UpdateContestResponse
	(*ListContestsRequest)(nil),             // 6: backend.v1.ListContestsRequest
	(*ListContestsResponse)(nil),            // 7: backend.v1.ListContestsResponse
	(*ListContestTasksRequest)(nil),         // 8: backend.v1.ListContestTasksRequest
	(*ListContestTasksResponse)(nil),        // 9: backend.v1.ListContestTasksResponse
	(*GetContestTaskRequest)(nil),           // 10: backend.v1.GetContestTaskRequest
	(*GetContestTaskResponse)(nil),          // 11: backend.v1.GetContestTaskResponse
	(*SyncContestTasksRequest)(nil),         // 12: backend.v1.SyncContestTasksRequest
	(*SyncContestTasksResponse)(nil),        // 13: backend.v1.SyncContestTasksResponse
	(*GetMySubmissionStatusesRequest)(nil),  // 14: backend.v1.GetMySubmissionStatusesRequest
	(*GetMySubmissionStatusesResponse)(nil), // 15: backend.v1.GetMySubmissionStatusesResponse
	(*GetStandingsRequest)(nil),             // 16: backend.v1.GetStandingsRequest
	(*GetStandingsResponse)(nil),            // 17: backend.v1.GetStandingsResponse
	(*RegisterMeRequest)(nil),               // 18: backend.v1.RegisterMeRequest
	(*RegisterMeResponse)(nil),              // 19: backend.v1.RegisterMeResponse
	(*CreateClarificationRequest)(nil),      // 20: backend.v1.CreateClarificationRequest
	(*CreateClarificationResponse)(nil),     // 21: backend.v1.CreateClarificationResponse
	(*ListClarificationsRequest)(nil),       // 22: backend.v1.ListClarificationsRequest
	(*ListClarificationsResponse)(nil),      // 23: backend.v1.ListClarificationsResponse
	(*DeleteClarificationRequest)(nil),      // 24: backend.v1.DeleteClarificationRequest
	(*DeleteClarificationResponse)(nil),     // 25: backend.v1.DeleteClarificationResponse
	(*CreateAnswerRequest)(nil),             // 26: backend.v1.CreateAnswerRequest
	(*CreateAnswerResponse)(nil),            // 27: backend.v1.CreateAnswerResponse
	(*UpdateAnswerRequest)(nil),             // 28: backend.v1.UpdateAnswerRequest
	(*UpdateAnswerResponse)(nil),            // 29: backend.v1.UpdateAnswerResponse
	(*DeleteAnswerRequest)(nil),             // 30: backend.v1.DeleteAnswerRequest
	(*DeleteAnswerResponse)(nil),            // 31: backend.v1.DeleteAnswerResponse
	(*SyncContestTasksRequest_Task)(nil),    // 32: backend.v1.SyncContestTasksRequest.Task
	(*MutationContest)(nil),                 // 33: backend.v1.MutationContest
	(*Contest)(nil),                         // 34: backend.v1.Contest
	(*ContestTask)(nil),                     // 35: backend.v1.ContestTask
	(*Task)(nil),                            // 36: backend.v1.Task
	(*Testcase)(nil),                        // 37: backend.v1.Testcase
	(*SubmissionStatus)(nil),                // 38: backend.v1.SubmissionStatus
	(*StandingsRecord)(nil),                 // 39: backend.v1.StandingsRecord
	(*Clarification)(nil),                   // 40: backend.v1.Clarification
	(*Clarification_Answer)(nil),            // 41: backend.v1.Clarification.Answer
}
var file_backend_v1_contest_service_proto_depIdxs = []int32{
	33, // 0: backend.v1.CreateContestRequest.contest:type_name -> backend.v1.MutationContest
	34, // 1: backend.v1.CreateContestResponse.contest:type_name -> backend.v1.Contest
	34, // 2: backend.v1.GetContestResponse.contest:type_name -> backend.v1.Contest
	33, // 3: backend.v1.UpdateContestRequest.contest:type_name -> backend.v1.MutationContest
	34, // 4: backend.v1.UpdateContestResponse.contest:type_name -> backend.v1.Contest
	34, // 5: backend.v1.ListContestsResponse.contests:type_name -> backend.v1.Contest
	35, // 6: backend.v1.ListContestTasksResponse.tasks:type_name -> backend.v1.ContestTask
	36, // 7: backend.v1.GetContestTaskResponse.task:type_name -> backend.v1.Task
	37, // 8: backend.v1.GetContestTaskResponse.samples:type_name -> backend.v1.Testcase
	32, // 9: backend.v1.SyncContestTasksRequest.tasks:type_name -> backend.v1.SyncContestTasksRequest.Task
	36, // 10: backend.v1.SyncContestTasksResponse.tasks:type_name -> backend.v1.Task
	38, // 11: backend.v1.GetMySubmissionStatusesResponse.submission_statuses:type_name -> backend.v1.SubmissionStatus
	39, // 12: backend.v1.GetStandingsResponse.standings_list:type_name -> backend.v1.StandingsRecord
	40, // 13: backend.v1.CreateClarificationResponse.clarification:type_name -> backend.v1.Clarification
	40, // 14: backend.v1.ListClarificationsResponse.clarifications:type_name -> backend.v1.Clarification
	41, // 15: backend.v1.CreateAnswerResponse.answer:type_name -> backend.v1.Clarification.Answer
	41, // 16: backend.v1.UpdateAnswerResponse.answer:type_name -> backend.v1.Clarification.Answer
	0,  // 17: backend.v1.ContestService.CreateContest:input_type -> backend.v1.CreateContestRequest
	2,  // 18: backend.v1.ContestService.GetContest:input_type -> backend.v1.GetContestRequest
	4,  // 19: backend.v1.ContestService.UpdateContest:input_type -> backend.v1.UpdateContestRequest
	6,  // 20: backend.v1.ContestService.ListContests:input_type -> backend.v1.ListContestsRequest
	8,  // 21: backend.v1.ContestService.ListContestTasks:input_type -> backend.v1.ListContestTasksRequest
	10, // 22: backend.v1.ContestService.GetContestTask:input_type -> backend.v1.GetContestTaskRequest
	12, // 23: backend.v1.ContestService.SyncContestTasks:input_type -> backend.v1.SyncContestTasksRequest
	14, // 24: backend.v1.ContestService.GetMySubmissionStatuses:input_type -> backend.v1.GetMySubmissionStatusesRequest
	16, // 25: backend.v1.ContestService.GetStandings:input_type -> backend.v1.GetStandingsRequest
	18, // 26: backend.v1.ContestService.RegisterMe:input_type -> backend.v1.RegisterMeRequest
	20, // 27: backend.v1.ContestService.CreateClarification:input_type -> backend.v1.CreateClarificationRequest
	22, // 28: backend.v1.ContestService.ListClarifications:input_type -> backend.v1.ListClarificationsRequest
	24, // 29: backend.v1.ContestService.DeleteClarification:input_type -> backend.v1.DeleteClarificationRequest
	26, // 30: backend.v1.ContestService.CreateAnswer:input_type -> backend.v1.CreateAnswerRequest
	28, // 31: backend.v1.ContestService.UpdateAnswer:input_type -> backend.v1.UpdateAnswerRequest
	30, // 32: backend.v1.ContestService.DeleteAnswer:input_type -> backend.v1.DeleteAnswerRequest
	1,  // 33: backend.v1.ContestService.CreateContest:output_type -> backend.v1.CreateContestResponse
	3,  // 34: backend.v1.ContestService.GetContest:output_type -> backend.v1.GetContestResponse
	5,  // 35: backend.v1.ContestService.UpdateContest:output_type -> backend.v1.UpdateContestResponse
	7,  // 36: backend.v1.ContestService.ListContests:output_type -> backend.v1.ListContestsResponse
	9,  // 37: backend.v1.ContestService.ListContestTasks:output_type -> backend.v1.ListContestTasksResponse
	11, // 38: backend.v1.ContestService.GetContestTask:output_type -> backend.v1.GetContestTaskResponse
	13, // 39: backend.v1.ContestService.SyncContestTasks:output_type -> backend.v1.SyncContestTasksResponse
	15, // 40: backend.v1.ContestService.GetMySubmissionStatuses:output_type -> backend.v1.GetMySubmissionStatusesResponse
	17, // 41: backend.v1.ContestService.GetStandings:output_type -> backend.v1.GetStandingsResponse
	19, // 42: backend.v1.ContestService.RegisterMe:output_type -> backend.v1.RegisterMeResponse
	21, // 43: backend.v1.ContestService.CreateClarification:output_type -> backend.v1.CreateClarificationResponse
	23, // 44: backend.v1.ContestService.ListClarifications:output_type -> backend.v1.ListClarificationsResponse
	25, // 45: backend.v1.ContestService.DeleteClarification:output_type -> backend.v1.DeleteClarificationResponse
	27, // 46: backend.v1.ContestService.CreateAnswer:output_type -> backend.v1.CreateAnswerResponse
	29, // 47: backend.v1.ContestService.UpdateAnswer:output_type -> backend.v1.UpdateAnswerResponse
	31, // 48: backend.v1.ContestService.DeleteAnswer:output_type -> backend.v1.DeleteAnswerResponse
	33, // [33:49] is the sub-list for method output_type
	17, // [17:33] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_backend_v1_contest_service_proto_init() }
func file_backend_v1_contest_service_proto_init() {
	if File_backend_v1_contest_service_proto != nil {
		return
	}
	file_backend_v1_contest_resources_proto_init()
	file_backend_v1_task_resources_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_backend_v1_contest_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContestTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContestTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContestTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContestTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncContestTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncContestTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMySubmissionStatusesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMySubmissionStatusesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStandingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStandingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClarificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClarificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClarificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClarificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClarificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClarificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_contest_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncContestTasksRequest_Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_backend_v1_contest_service_proto_msgTypes[20].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_v1_contest_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_v1_contest_service_proto_goTypes,
		DependencyIndexes: file_backend_v1_contest_service_proto_depIdxs,
		MessageInfos:      file_backend_v1_contest_service_proto_msgTypes,
	}.Build()
	File_backend_v1_contest_service_proto = out.File
	file_backend_v1_contest_service_proto_rawDesc = nil
	file_backend_v1_contest_service_proto_goTypes = nil
	file_backend_v1_contest_service_proto_depIdxs = nil
}
