// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: backend/v1/resources.proto

package backendv1

import (
	_ "github.com/szpp-dev-team/szpp-judge/proto-gen/go/judge/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Difficulty int32

const (
	Difficulty_DIFFICULTY_UNSPECIFIED Difficulty = 0
	Difficulty_BEGINNER               Difficulty = 1
	Difficulty_EASY                   Difficulty = 2
	Difficulty_MEDIUM                 Difficulty = 3
	Difficulty_HARD                   Difficulty = 4
	Difficulty_IMPOSSIBLE             Difficulty = 5
)

// Enum value maps for Difficulty.
var (
	Difficulty_name = map[int32]string{
		0: "DIFFICULTY_UNSPECIFIED",
		1: "BEGINNER",
		2: "EASY",
		3: "MEDIUM",
		4: "HARD",
		5: "IMPOSSIBLE",
	}
	Difficulty_value = map[string]int32{
		"DIFFICULTY_UNSPECIFIED": 0,
		"BEGINNER":               1,
		"EASY":                   2,
		"MEDIUM":                 3,
		"HARD":                   4,
		"IMPOSSIBLE":             5,
	}
)

func (x Difficulty) Enum() *Difficulty {
	p := new(Difficulty)
	*p = x
	return p
}

func (x Difficulty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Difficulty) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_v1_resources_proto_enumTypes[0].Descriptor()
}

func (Difficulty) Type() protoreflect.EnumType {
	return &file_backend_v1_resources_proto_enumTypes[0]
}

func (x Difficulty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Difficulty.Descriptor instead.
func (Difficulty) EnumDescriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{0}
}

type TaskNormal_Visibility int32

const (
	TaskNormal_VISIBILITY_UNSPECIFIED TaskNormal_Visibility = 0
	TaskNormal_PUBLIC                 TaskNormal_Visibility = 1
	TaskNormal_PRIVATE                TaskNormal_Visibility = 2
)

// Enum value maps for TaskNormal_Visibility.
var (
	TaskNormal_Visibility_name = map[int32]string{
		0: "VISIBILITY_UNSPECIFIED",
		1: "PUBLIC",
		2: "PRIVATE",
	}
	TaskNormal_Visibility_value = map[string]int32{
		"VISIBILITY_UNSPECIFIED": 0,
		"PUBLIC":                 1,
		"PRIVATE":                2,
	}
)

func (x TaskNormal_Visibility) Enum() *TaskNormal_Visibility {
	p := new(TaskNormal_Visibility)
	*p = x
	return p
}

func (x TaskNormal_Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskNormal_Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_v1_resources_proto_enumTypes[1].Descriptor()
}

func (TaskNormal_Visibility) Type() protoreflect.EnumType {
	return &file_backend_v1_resources_proto_enumTypes[1]
}

func (x TaskNormal_Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskNormal_Visibility.Descriptor instead.
func (TaskNormal_Visibility) EnumDescriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{4, 0}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username  string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	IsAdmin   bool                   `protobuf:"varint,4,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_resources_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_resources_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Clarification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content   string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ContestId int32                  `protobuf:"varint,4,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	IsPublic  bool                   `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	Answer    *Clarification_Answer  `protobuf:"bytes,6,opt,name=answer,proto3" json:"answer,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Clarification) Reset() {
	*x = Clarification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_resources_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clarification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clarification) ProtoMessage() {}

func (x *Clarification) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_resources_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clarification.ProtoReflect.Descriptor instead.
func (*Clarification) Descriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{1}
}

func (x *Clarification) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Clarification) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Clarification) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Clarification) GetContestId() int32 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *Clarification) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *Clarification) GetAnswer() *Clarification_Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

func (x *Clarification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Clarification) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title           string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                               // 問題名
	Statement       string  `protobuf:"bytes,3,opt,name=statement,proto3" json:"statement,omitempty"`                                       // 問題文
	ExecTimeLimit   float64 `protobuf:"fixed64,4,opt,name=exec_time_limit,json=execTimeLimit,proto3" json:"exec_time_limit,omitempty"`      // 実行時間制限[s]
	ExecMemoryLimit int32   `protobuf:"varint,5,opt,name=exec_memory_limit,json=execMemoryLimit,proto3" json:"exec_memory_limit,omitempty"` // 実行メモリ制限[MB]
	ContestId       *int32  `protobuf:"varint,6,opt,name=contest_id,json=contestId,proto3,oneof" json:"contest_id,omitempty"`               // 属するコンテストの ID
	Checker         string  `protobuf:"bytes,7,opt,name=checker,proto3" json:"checker,omitempty"`                                           // TODO: judge の型を使う(testlib-checkers or custom)
	// Types that are assignable to TaskType:
	//
	//	*Task_Contest
	//	*Task_Normal
	TaskType  isTask_TaskType        `protobuf_oneof:"task_type"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_resources_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_resources_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{2}
}

func (x *Task) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Task) GetStatement() string {
	if x != nil {
		return x.Statement
	}
	return ""
}

func (x *Task) GetExecTimeLimit() float64 {
	if x != nil {
		return x.ExecTimeLimit
	}
	return 0
}

func (x *Task) GetExecMemoryLimit() int32 {
	if x != nil {
		return x.ExecMemoryLimit
	}
	return 0
}

func (x *Task) GetContestId() int32 {
	if x != nil && x.ContestId != nil {
		return *x.ContestId
	}
	return 0
}

func (x *Task) GetChecker() string {
	if x != nil {
		return x.Checker
	}
	return ""
}

func (m *Task) GetTaskType() isTask_TaskType {
	if m != nil {
		return m.TaskType
	}
	return nil
}

func (x *Task) GetContest() *TaskContest {
	if x, ok := x.GetTaskType().(*Task_Contest); ok {
		return x.Contest
	}
	return nil
}

func (x *Task) GetNormal() *TaskNormal {
	if x, ok := x.GetTaskType().(*Task_Normal); ok {
		return x.Normal
	}
	return nil
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type isTask_TaskType interface {
	isTask_TaskType()
}

type Task_Contest struct {
	Contest *TaskContest `protobuf:"bytes,8,opt,name=contest,proto3,oneof"`
}

type Task_Normal struct {
	Normal *TaskNormal `protobuf:"bytes,9,opt,name=normal,proto3,oneof"`
}

func (*Task_Contest) isTask_TaskType() {}

func (*Task_Normal) isTask_TaskType() {}

// コンテスト用の問題
// GitHub Actions or Admin からのリクエストしか受け付けない
type TaskContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestSlug string `protobuf:"bytes,1,opt,name=contest_slug,json=contestSlug,proto3" json:"contest_slug,omitempty"`
}

func (x *TaskContest) Reset() {
	*x = TaskContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_resources_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskContest) ProtoMessage() {}

func (x *TaskContest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_resources_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskContest.ProtoReflect.Descriptor instead.
func (*TaskContest) Descriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{3}
}

func (x *TaskContest) GetContestSlug() string {
	if x != nil {
		return x.ContestSlug
	}
	return ""
}

// 単発の問題
type TaskNormal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visibility TaskNormal_Visibility `protobuf:"varint,3,opt,name=visibility,proto3,enum=backend.v1.TaskNormal_Visibility" json:"visibility,omitempty"`
}

func (x *TaskNormal) Reset() {
	*x = TaskNormal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_resources_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskNormal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskNormal) ProtoMessage() {}

func (x *TaskNormal) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_resources_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskNormal.ProtoReflect.Descriptor instead.
func (*TaskNormal) Descriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{4}
}

func (x *TaskNormal) GetVisibility() TaskNormal_Visibility {
	if x != nil {
		return x.Visibility
	}
	return TaskNormal_VISIBILITY_UNSPECIFIED
}

type MutationTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                               // 問題名
	Statement       string  `protobuf:"bytes,2,opt,name=statement,proto3" json:"statement,omitempty"`                                       // 問題文
	ExecTimeLimit   float64 `protobuf:"fixed64,3,opt,name=exec_time_limit,json=execTimeLimit,proto3" json:"exec_time_limit,omitempty"`      // 実行時間制限[s]
	ExecMemoryLimit int32   `protobuf:"varint,4,opt,name=exec_memory_limit,json=execMemoryLimit,proto3" json:"exec_memory_limit,omitempty"` // 実行メモリ制限[MB]
	ContestId       *int32  `protobuf:"varint,5,opt,name=contest_id,json=contestId,proto3,oneof" json:"contest_id,omitempty"`               // 属するコンテストの ID
	Checker         string  `protobuf:"bytes,6,opt,name=checker,proto3" json:"checker,omitempty"`                                           // TODO: judge の型を使う(testlib-checkers or custom)
	// Types that are assignable to TaskType:
	//
	//	*MutationTask_Contest
	//	*MutationTask_Normal
	TaskType isMutationTask_TaskType `protobuf_oneof:"task_type"`
}

func (x *MutationTask) Reset() {
	*x = MutationTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_resources_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutationTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutationTask) ProtoMessage() {}

func (x *MutationTask) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_resources_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutationTask.ProtoReflect.Descriptor instead.
func (*MutationTask) Descriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{5}
}

func (x *MutationTask) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MutationTask) GetStatement() string {
	if x != nil {
		return x.Statement
	}
	return ""
}

func (x *MutationTask) GetExecTimeLimit() float64 {
	if x != nil {
		return x.ExecTimeLimit
	}
	return 0
}

func (x *MutationTask) GetExecMemoryLimit() int32 {
	if x != nil {
		return x.ExecMemoryLimit
	}
	return 0
}

func (x *MutationTask) GetContestId() int32 {
	if x != nil && x.ContestId != nil {
		return *x.ContestId
	}
	return 0
}

func (x *MutationTask) GetChecker() string {
	if x != nil {
		return x.Checker
	}
	return ""
}

func (m *MutationTask) GetTaskType() isMutationTask_TaskType {
	if m != nil {
		return m.TaskType
	}
	return nil
}

func (x *MutationTask) GetContest() *TaskContest {
	if x, ok := x.GetTaskType().(*MutationTask_Contest); ok {
		return x.Contest
	}
	return nil
}

func (x *MutationTask) GetNormal() *TaskNormal {
	if x, ok := x.GetTaskType().(*MutationTask_Normal); ok {
		return x.Normal
	}
	return nil
}

type isMutationTask_TaskType interface {
	isMutationTask_TaskType()
}

type MutationTask_Contest struct {
	Contest *TaskContest `protobuf:"bytes,7,opt,name=contest,proto3,oneof"`
}

type MutationTask_Normal struct {
	Normal *TaskNormal `protobuf:"bytes,8,opt,name=normal,proto3,oneof"`
}

func (*MutationTask_Contest) isMutationTask_TaskType() {}

func (*MutationTask_Normal) isMutationTask_TaskType() {}

// (slug, task_id) は複合 unique
type TestcaseSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug          string                 `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"` // means name
	Score         int32                  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	TestcaseSlugs []string               `protobuf:"bytes,4,rep,name=testcase_slugs,json=testcaseSlugs,proto3" json:"testcase_slugs,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	TaskId        int32                  `protobuf:"varint,7,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *TestcaseSet) Reset() {
	*x = TestcaseSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_resources_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestcaseSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestcaseSet) ProtoMessage() {}

func (x *TestcaseSet) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_resources_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestcaseSet.ProtoReflect.Descriptor instead.
func (*TestcaseSet) Descriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{6}
}

func (x *TestcaseSet) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TestcaseSet) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *TestcaseSet) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TestcaseSet) GetTestcaseSlugs() []string {
	if x != nil {
		return x.TestcaseSlugs
	}
	return nil
}

func (x *TestcaseSet) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TestcaseSet) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TestcaseSet) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type MutationTestcaseSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug          string   `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"` // means name
	Score         int32    `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	TestcaseSlugs []string `protobuf:"bytes,3,rep,name=testcase_slugs,json=testcaseSlugs,proto3" json:"testcase_slugs,omitempty"`
}

func (x *MutationTestcaseSet) Reset() {
	*x = MutationTestcaseSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_resources_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutationTestcaseSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutationTestcaseSet) ProtoMessage() {}

func (x *MutationTestcaseSet) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_resources_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutationTestcaseSet.ProtoReflect.Descriptor instead.
func (*MutationTestcaseSet) Descriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{7}
}

func (x *MutationTestcaseSet) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *MutationTestcaseSet) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *MutationTestcaseSet) GetTestcaseSlugs() []string {
	if x != nil {
		return x.TestcaseSlugs
	}
	return nil
}

// (slug, task_id) は複合 unique
type Testcase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug        string                 `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Description *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Input       string                 `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	Output      string                 `protobuf:"bytes,5,opt,name=output,proto3" json:"output,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	TaskId      int32                  `protobuf:"varint,8,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *Testcase) Reset() {
	*x = Testcase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_resources_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Testcase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Testcase) ProtoMessage() {}

func (x *Testcase) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_resources_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Testcase.ProtoReflect.Descriptor instead.
func (*Testcase) Descriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{8}
}

func (x *Testcase) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Testcase) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Testcase) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Testcase) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Testcase) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Testcase) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Testcase) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Testcase) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type MutationTestcase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug        string  `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Input       string  `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	Output      string  `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *MutationTestcase) Reset() {
	*x = MutationTestcase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_resources_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutationTestcase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutationTestcase) ProtoMessage() {}

func (x *MutationTestcase) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_resources_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutationTestcase.ProtoReflect.Descriptor instead.
func (*MutationTestcase) Descriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{9}
}

func (x *MutationTestcase) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *MutationTestcase) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *MutationTestcase) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *MutationTestcase) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type Clarification_Answer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content   string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Clarification_Answer) Reset() {
	*x = Clarification_Answer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_resources_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clarification_Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clarification_Answer) ProtoMessage() {}

func (x *Clarification_Answer) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_resources_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clarification_Answer.ProtoReflect.Descriptor instead.
func (*Clarification_Answer) Descriptor() ([]byte, []int) {
	return file_backend_v1_resources_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Clarification_Answer) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Clarification_Answer) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Clarification_Answer) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Clarification_Answer) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Clarification_Answer) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_backend_v1_resources_proto protoreflect.FileDescriptor

var file_backend_v1_resources_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x3e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x00, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x82,
	0x04, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12,
	0x38, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a,
	0xc1, 0x01, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xe9, 0x03, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x54,
	0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x65, 0x63,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x48,
	0x00, 0x52, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22,
	0x30, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x6c, 0x75,
	0x67, 0x22, 0x92, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x12, 0x41, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x22, 0x41, 0x0a, 0x0a, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49,
	0x56, 0x41, 0x54, 0x45, 0x10, 0x02, 0x22, 0xd7, 0x02, 0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x65,
	0x78, 0x65, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x65, 0x78, 0x65, 0x63, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x33, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x22, 0x91, 0x02, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x6c, 0x75, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x6c, 0x75, 0x67,
	0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x22, 0x66, 0x0a, 0x13, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73,
	0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x73, 0x22, 0xb6, 0x02, 0x0a,
	0x08, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x25, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x10, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x25,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2a, 0x66, 0x0a, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x49, 0x46, 0x46, 0x49, 0x43, 0x55, 0x4c, 0x54, 0x59, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45,
	0x41, 0x53, 0x59, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x41, 0x52, 0x44, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x49,
	0x4d, 0x50, 0x4f, 0x53, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x05, 0x42, 0xb0, 0x01, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x7a, 0x70,
	0x70, 0x2d, 0x64, 0x65, 0x76, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x73, 0x7a, 0x70, 0x70, 0x2d,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x42, 0x58, 0x58, 0xaa, 0x02, 0x0a,
	0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_backend_v1_resources_proto_rawDescOnce sync.Once
	file_backend_v1_resources_proto_rawDescData = file_backend_v1_resources_proto_rawDesc
)

func file_backend_v1_resources_proto_rawDescGZIP() []byte {
	file_backend_v1_resources_proto_rawDescOnce.Do(func() {
		file_backend_v1_resources_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_v1_resources_proto_rawDescData)
	})
	return file_backend_v1_resources_proto_rawDescData
}

var file_backend_v1_resources_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_backend_v1_resources_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_backend_v1_resources_proto_goTypes = []interface{}{
	(Difficulty)(0),               // 0: backend.v1.Difficulty
	(TaskNormal_Visibility)(0),    // 1: backend.v1.TaskNormal.Visibility
	(*User)(nil),                  // 2: backend.v1.User
	(*Clarification)(nil),         // 3: backend.v1.Clarification
	(*Task)(nil),                  // 4: backend.v1.Task
	(*TaskContest)(nil),           // 5: backend.v1.TaskContest
	(*TaskNormal)(nil),            // 6: backend.v1.TaskNormal
	(*MutationTask)(nil),          // 7: backend.v1.MutationTask
	(*TestcaseSet)(nil),           // 8: backend.v1.TestcaseSet
	(*MutationTestcaseSet)(nil),   // 9: backend.v1.MutationTestcaseSet
	(*Testcase)(nil),              // 10: backend.v1.Testcase
	(*MutationTestcase)(nil),      // 11: backend.v1.MutationTestcase
	(*Clarification_Answer)(nil),  // 12: backend.v1.Clarification.Answer
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_backend_v1_resources_proto_depIdxs = []int32{
	13, // 0: backend.v1.User.created_at:type_name -> google.protobuf.Timestamp
	13, // 1: backend.v1.User.updated_at:type_name -> google.protobuf.Timestamp
	12, // 2: backend.v1.Clarification.answer:type_name -> backend.v1.Clarification.Answer
	13, // 3: backend.v1.Clarification.created_at:type_name -> google.protobuf.Timestamp
	13, // 4: backend.v1.Clarification.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 5: backend.v1.Task.contest:type_name -> backend.v1.TaskContest
	6,  // 6: backend.v1.Task.normal:type_name -> backend.v1.TaskNormal
	13, // 7: backend.v1.Task.created_at:type_name -> google.protobuf.Timestamp
	13, // 8: backend.v1.Task.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 9: backend.v1.TaskNormal.visibility:type_name -> backend.v1.TaskNormal.Visibility
	5,  // 10: backend.v1.MutationTask.contest:type_name -> backend.v1.TaskContest
	6,  // 11: backend.v1.MutationTask.normal:type_name -> backend.v1.TaskNormal
	13, // 12: backend.v1.TestcaseSet.created_at:type_name -> google.protobuf.Timestamp
	13, // 13: backend.v1.TestcaseSet.updated_at:type_name -> google.protobuf.Timestamp
	13, // 14: backend.v1.Testcase.created_at:type_name -> google.protobuf.Timestamp
	13, // 15: backend.v1.Testcase.updated_at:type_name -> google.protobuf.Timestamp
	13, // 16: backend.v1.Clarification.Answer.created_at:type_name -> google.protobuf.Timestamp
	13, // 17: backend.v1.Clarification.Answer.updated_at:type_name -> google.protobuf.Timestamp
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_backend_v1_resources_proto_init() }
func file_backend_v1_resources_proto_init() {
	if File_backend_v1_resources_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_backend_v1_resources_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_resources_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clarification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_resources_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_resources_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_resources_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskNormal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_resources_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutationTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_resources_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestcaseSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_resources_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutationTestcaseSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_resources_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Testcase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_resources_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutationTestcase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_resources_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clarification_Answer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_backend_v1_resources_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_backend_v1_resources_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Task_Contest)(nil),
		(*Task_Normal)(nil),
	}
	file_backend_v1_resources_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*MutationTask_Contest)(nil),
		(*MutationTask_Normal)(nil),
	}
	file_backend_v1_resources_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_backend_v1_resources_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_backend_v1_resources_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_v1_resources_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_backend_v1_resources_proto_goTypes,
		DependencyIndexes: file_backend_v1_resources_proto_depIdxs,
		EnumInfos:         file_backend_v1_resources_proto_enumTypes,
		MessageInfos:      file_backend_v1_resources_proto_msgTypes,
	}.Build()
	File_backend_v1_resources_proto = out.File
	file_backend_v1_resources_proto_rawDesc = nil
	file_backend_v1_resources_proto_goTypes = nil
	file_backend_v1_resources_proto_depIdxs = nil
}
