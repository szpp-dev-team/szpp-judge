syntax = "proto3";

package backend.v1;

import "backend/v1/resources.proto";
import "google/protobuf/timestamp.proto";

message GetUserRequest {
  string username = 1;
}

message GetUserResponse {
  User user = 1;
}

message CreateUserRequest {
  string username = 1;
  string password = 2;
  string email = 3;
}

message CreateUserResponse {
  User user = 1;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  User user = 1;
}

message RefreshAccessTokenRequest {
  string refresh_token = 1;
}

message RefreshAccessTokenResponse {
  string access_token = 1;
}

message LogoutRequest {
  string refresh_token = 1;
}

message LogoutResponse {}

message CreateTaskRequest {
  MutationTask task = 1;
  repeated MutationTestcaseSet testcase_sets = 2;
  repeated MutationTestcase testcases = 3;
}

message CreateTaskResponse {
  Task task = 1;
  repeated TestcaseSet testcase_sets = 2;
  repeated Testcase testcases = 3;
}

message GetTaskRequest {
  int32 id = 1;
}

message GetTaskResponse {
  Task task = 1;
  repeated Testcase testcases = 2;
}

message UpdateTaskRequest {
  int32 id = 1;
  MutationTask task = 2;
  repeated MutationTestcaseSet testcase_sets = 3;
  repeated MutationTestcase testcases = 4;
}

message UpdateTaskResponse {
  Task task = 1;
  repeated TestcaseSet testcase_sets = 2;
  repeated Testcase testcases = 3;
}

message PingRequest {
  string name = 1;
}

message PingResponse {
  string message = 1;
}

message CreateContestRequest {
  string name = 1;
  string slug = 2;
  string description = 3;
  google.protobuf.Timestamp start_at = 4;
  google.protobuf.Timestamp end_at = 5;
}

message CreateContestResponse {
  Contest contest = 1;
}

message GetContestRequest {
  string slug = 1;
}

message GetContestResponse {
  Contest contest = 1;
}

message ListContestsRequest {}

message ListContestsResponse {
  repeated Contest contests = 1;
}

message GetStandingsRequest {
  int32 contest_id = 1;
}

message GetStandingsResponse {
  repeated StandingsElement standings_list = 1;
}
message CreateClarificationRequest {
  int32 user_id = 1;
  string content = 2;
  bool is_public = 3;
}

message CreateClarificationResponse {
  Clarification clarification = 1;
}

message GetClarificationRequest {
  int32 id = 1;
}

message GetClarificationResponse {
  Clarification clarification = 1;
}

message ListClarificationsRequest {}

message ListClarificationsResponse {
  repeated Clarification clarifications = 1;
}

message UpdateClarificationRequest {
  int32 id = 1;
  string content = 2;
  bool is_public = 3;
}

message UpdateClarificationResponse {
  Clarification clarification = 1;
}

message DeleteClarificationRequest {
  int32 id = 1;
}

message DeleteClarificationResponse {}

message CreateAnswerRequest {
  int32 clarification_id = 1;
  int32 user_id = 2;
  string content = 3;
}

message CreateAnswerResponse {
  Clarification.Answer answer = 1;
}

message GetAnswerRequest {
  int32 answer_id = 1;
}

message GetAnswerResponse {
  Clarification.Answer answer = 1;
}
message UpdateAnswerRequest {
  int32 answer_id = 1;
  string content = 2;
}

message UpdateAnswerResponse {
  Clarification.Answer answer = 1;
}

message DeleteAnswerRequest {
  int32 answer_id = 1;
}

message DeleteAnswerResponse {}
