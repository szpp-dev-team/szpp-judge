syntax = "proto3";

package backend.v1;

import "google/protobuf/timestamp.proto";
import "judge/v1/judge_type.proto";

message User {
  int32 id = 1;
  string username = 2;
  bool is_admin = 4;
  google.protobuf.Timestamp created_at = 5;
  optional google.protobuf.Timestamp updated_at = 6;
}

message Task {
  int32 id = 1;
  string title = 2; // 問題名
  string statement = 3; // 問題文
  int32 exec_time_limit = 4; // 実行時間制限[ms]
  int32 exec_memory_limit = 5; // 実行メモリ制限[MB]
  repeated int32 contest_ids = 6; // 属するコンテストの ID
  judge.v1.JudgeType judge_type = 7; // Judge の type(完全一致、誤差など)
  Difficulty difficulty = 8;
  google.protobuf.Timestamp created_at = 9;
  optional google.protobuf.Timestamp updated_at = 10;
}

message MutationTask {
  string title = 1; // 問題名
  string statement = 2; // 問題文
  int32 exec_time_limit = 3; // 実行時間制限[ms]
  int32 exec_memory_limit = 4; // 実行メモリ制限[MB]
  judge.v1.JudgeType judge_type = 5; // Judge の type(完全一致、誤差など)
  Difficulty difficulty = 6;
}

enum Visibility {
  VISIBILITY_UNSPECIFIED = 0;
  PUBLIC = 1;
  PRIVATE = 2;
}

enum Difficulty {
  DIFFICULTY_UNSPECIFIED = 0;
  BEGINNER = 1;
  EASY = 2;
  MEDIUM = 3;
  HARD = 4;
  IMPOSSIBLE = 5;
}

// (slug, task_id) は複合 unique
message TestcaseSet {
  int32 id = 1;
  string slug = 2; // means name
  int32 score = 3;
  repeated string testcase_slugs = 4;
  google.protobuf.Timestamp created_at = 5;
  optional google.protobuf.Timestamp updated_at = 6;
  int32 task_id = 7;
}

message MutationTestcaseSet {
  string slug = 1; // means name
  int32 score = 2;
  repeated string testcase_slugs = 3;
}

enum JudgeStatus {
  JUDGE_STATUS_UNSPECIFIED = 0;
  AC = 1;
  CE = 2;
  IE = 3;
  MLE = 4;
  OLE = 5;
  RE = 6;
  TLE = 7;
  WA = 8;
}

// (slug, task_id) は複合 unique
message Testcase {
  int32 id = 1;
  string slug = 2;
  optional string description = 3;
  string input = 4;
  string output = 5;
  google.protobuf.Timestamp created_at = 6;
  optional google.protobuf.Timestamp updated_at = 7;
  int32 task_id = 8;
}

message MutationTestcase {
  string slug = 1;
  optional string description = 2;
  string input = 3;
  string output = 4;
}

// 提出
message Submission {
  int32 id = 1;
  int32 user_id = 2;
  string user_name = 3;
  optional int32 contest_id = 4;
  int32 task_id = 5;
  string task_title = 6;
  string source_code = 7;
  string lang_id = 8;
  optional JudgeStatus status = 9; // 全体のジャッジ結果。ジャッジ中はnull
  int32 score = 10;
  optional uint32 exec_time = 11;
  optional uint32 memory = 12;
  google.protobuf.Timestamp submited_at = 13;
  google.protobuf.Timestamp created_at = 14;
  optional google.protobuf.Timestamp update_at = 15;
  repeated TestcaseResult testcase_results = 16;
}

// テストケース一つあたりの結果
message TestcaseResult {
  string testcase_name = 1;
  JudgeStatus judge_status = 2;
  uint32 exec_time_ms = 3;
  uint32 exec_memory_kib = 4;
}

// ジャッジの途中経過　WA(2/10) など。
message JudgeProgress {
  JudgeStatus status = 1; // ジャッジ済みのケースが全てACであれば UNSPECIFIED そうでなければ最初に出た非ACの結果
  int32 total_tesccases = 2; // テストケースの総数
  int32 completed_testcases = 3; // ジャッジ済みのテストケース数
}
