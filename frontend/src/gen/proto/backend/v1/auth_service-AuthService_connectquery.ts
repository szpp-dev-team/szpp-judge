// @generated by protoc-gen-connect-query v0.5.1 with parameter "target=ts,import_extension=none"
// @generated from file backend/v1/auth_service.proto (package backend.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { LoginRequest, LoginResponse, LogoutRequest, LogoutResponse, RefreshAccessTokenRequest, RefreshAccessTokenResponse } from "./auth_service_pb";
import { MethodKind } from "@bufbuild/protobuf";
import { createQueryService, createUnaryHooks } from "@connectrpc/connect-query";

export const typeName = "backend.v1.AuthService";

/**
 * @generated from service backend.v1.AuthService
 */
export const AuthService = {
  typeName: "backend.v1.AuthService",
  methods: {
    /**
     * ログイン
     *
     * @generated from rpc backend.v1.AuthService.Login
     */
    login: {
      name: "Login",
      I: LoginRequest,
      O: LoginResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ログアウト
     *
     * @generated from rpc backend.v1.AuthService.Logout
     */
    logout: {
      name: "Logout",
      I: LogoutRequest,
      O: LogoutResponse,
      kind: MethodKind.Unary,
    },
    /**
     * refresh token を使って access token を更新する
     *
     * @generated from rpc backend.v1.AuthService.RefreshAccessToken
     */
    refreshAccessToken: {
      name: "RefreshAccessToken",
      I: RefreshAccessTokenRequest,
      O: RefreshAccessTokenResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

const $queryService = createQueryService({  service: AuthService,});

/**
 * ログイン
 *
 * @generated from rpc backend.v1.AuthService.Login
 */
export const login = {   ...$queryService.login,  ...createUnaryHooks($queryService.login)};

/**
 * ログアウト
 *
 * @generated from rpc backend.v1.AuthService.Logout
 */
export const logout = {   ...$queryService.logout,  ...createUnaryHooks($queryService.logout)};

/**
 * refresh token を使って access token を更新する
 *
 * @generated from rpc backend.v1.AuthService.RefreshAccessToken
 */
export const refreshAccessToken = {   ...$queryService.refreshAccessToken,  ...createUnaryHooks($queryService.refreshAccessToken)};
