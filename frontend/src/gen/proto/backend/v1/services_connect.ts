// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts,import_extension=none"
// @generated from file backend/v1/services.proto (package backend.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateTaskRequest, CreateTaskResponse, CreateUserRequest, CreateUserResponse, GetTaskRequest, GetTaskResponse, GetUserRequest, GetUserResponse, LoginRequest, LoginResponse, LogoutRequest, LogoutResponse, PingRequest, PingResponse, UpdateTaskRequest, UpdateTaskResponse } from "./messages_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service backend.v1.UserService
 */
export const UserService = {
  typeName: "backend.v1.UserService",
  methods: {
    /**
     * 指定された User を取得する
     *
     * @generated from rpc backend.v1.UserService.GetUser
     */
    getUser: {
      name: "GetUser",
      I: GetUserRequest,
      O: GetUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * User を新たに作成する
     *
     * @generated from rpc backend.v1.UserService.CreateUser
     */
    createUser: {
      name: "CreateUser",
      I: CreateUserRequest,
      O: CreateUserResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * @generated from service backend.v1.AuthService
 */
export const AuthService = {
  typeName: "backend.v1.AuthService",
  methods: {
    /**
     * ログイン
     *
     * @generated from rpc backend.v1.AuthService.Login
     */
    login: {
      name: "Login",
      I: LoginRequest,
      O: LoginResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ログアウト
     *
     * @generated from rpc backend.v1.AuthService.Logout
     */
    logout: {
      name: "Logout",
      I: LogoutRequest,
      O: LogoutResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * @generated from service backend.v1.TaskService
 */
export const TaskService = {
  typeName: "backend.v1.TaskService",
  methods: {
    /**
     * Task を作成する
     *
     * @generated from rpc backend.v1.TaskService.CreateTask
     */
    createTask: {
      name: "CreateTask",
      I: CreateTaskRequest,
      O: CreateTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 指定された Task を取得する
     *
     * @generated from rpc backend.v1.TaskService.GetTask
     */
    getTask: {
      name: "GetTask",
      I: GetTaskRequest,
      O: GetTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Task を更新する
     *
     * @generated from rpc backend.v1.TaskService.UpdateTask
     */
    updateTask: {
      name: "UpdateTask",
      I: UpdateTaskRequest,
      O: UpdateTaskResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * @generated from service backend.v1.HealthcheckService
 */
export const HealthcheckService = {
  typeName: "backend.v1.HealthcheckService",
  methods: {
    /**
     * @generated from rpc backend.v1.HealthcheckService.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

